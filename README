====================
miniascape
====================

WARNING: miniascape is in pre-alpha state and will heavily udpate day by day, so
it may not work in your environment or might cause trouble. TRY IT IN YOUR OWN
RISK, PLEASE.

miniascape is a template compiler optimized to generate collection of
configurations and data to setup libvirt based virtualization guests build
environment quickly.

Main objects are

 * Make network configuration for virtualization guests much easier.
   (pre-defined libvirt networks and DHCP configurations to allow access from
   host by hostnames)

 * Lightweight; Does not require expensive high-performance servers. I try to
   make it works on my non-high power vaio note pc having Intel Atom CPU and
   only 2G RAM.

 * Do not intend to become a replacement for other feature rich software such
   like RHEV, RHN Satellite and cobbler, etc.

 * Fully utilize exsiting library, tools and do not intend to replace or
   reinvent the wheel


Usage
====================

1. Setup host: mount iso images and setup kickstart installation trees, etc.
2. Arrange configuration files (examples are in /etc/miniascape/config/)
3. Run miniascape to generate libvirt network xml, ks.cfg and vm build scripts:

   miniascape ge [Options ...]

   or 

   miniascape generate [Options ...]

4. Run built script in the working dir, e.g. <workdir>/<guest_name>/vmbuild.sh


How it works?
====================

miniascape just works like a kind of template compiler optimized to generate
ks.cfg, wrapper scripts around virt-install and configurations installed into
the libvirt host in current implementation.


Configurations
---------------------

Configurations and parameters are in YAML configuration files (default:
/etc/miniascape/config/**/*.yml).


Templates
--------------------

I chose jinja2 as template engine for miniascape.

Miniascape contains some concrete template examples under
/usr/share/miniascape/templates:

* autoinstall.d/: auto installation (kickstart) templates
* libvirt/: libvirt/virtinst specific templates like network xml, wrapper
  script for virt-install


Prerequisites
====================

Hardware and base OS
----------------------

* Intel x86 (i386 or x86_64) machine with VT extension (Intel VT or AMD-V) enabled
* RHEL 6 or Fedora 13+ or any linux distributions corresponding to these versions


Tools and libs
-------------------

 * python-jinja2-cui: https://github.com/ssato/python-jinja2-cui
 * libvirt and its python binding
 * python-virtinst
 * qemu-kvm
 * nginx or (apache) httpd
 * etc.


Build
====================

Run `python setup.py srpm` and mock dist/SRPMS/<built-srpm>, or 
run `python setup.py rpm`.


Installation
====================

* [Recommended] build srpm, rpm w/ mock and install it
* build and install: `python setup.py build` and `python setup.py install`


TODO
=====================

upstream works
-------------------

* Fix a bug that multiple storage volume cannot be created in a same storage pool
  with virt-install --disk option (rhbz#857424)
* -C | --config ffile option for virt-install
* more D-Bus APIs for dnsmasq to simplify the control process of dnsmasq and
  make it dynamic


miniascape itself
-----------------------

* Added some more host-configuration stuff, like autofs, www (apache or nginx),
  nfs, iscsi, etc.
* Docuemnt


License
====================

This is distributed under GPLv3 or later.


Author
=======================

Satoru SATOH <satoru.satoh at gmail.com>

