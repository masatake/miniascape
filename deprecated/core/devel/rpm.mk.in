#
# RPM related stuff, included from core.mk
#

SED	= $(miniascape_SED)
VIRSH	= $(miniascape_VIRSH)
QEMU_IMG	= $(miniascape_QEMU_IMG)
DISK_FMT	= $(miniascape_DISK_IMG_FMT)


rpmname = $(miniascape_RPM_BASENAME)-$(miniascape_RPM_VERSION)
rpmdirs	= $(addprefix $(WORKDIR)/,RPMS/$(arch) RPMS/noarch BUILD BUILDROOT)
rpmspec = $(WORKDIR)/$(miniascape_RPM_BASENAME).spec
rpmsrc	= $(WORKDIR)/$(rpmname).tar.xz

rpmsrcdir = $(WORKDIR)/$(rpmname)

vm_xml_do_subst = $(SED) -e '/uuid/d'

img_0_sfx	= initial


# create delta image
create_img	= cd $(rpmsrcdir) && $(QEMU_IMG) create -f qcow2 -b $(notdir $<) $(notdir $@).t && mv $@.t $@


# variables for rpm spec:
rpmbuilddate    = $(shell LANG=C date +"%a %b %d %Y")
rpmspec_do_subst = $(SED) \
	-e 's!__PKGNAME__!$(miniascape_RPM_BASENAME)!g' \
	-e 's!__NAME__!$(miniascape_NAME)!g'\
	-e 's!__VER__!$(miniascape_RPM_VERSION)!g' \
	-e 's!__ARCH__!$(miniascape_ARCH)!g'\
	-e 's!__DATE__!$(rpmbuilddate)!g' \
	-e 's!__DISK_FMT__!$(DISK_FMT)!g' \
	-e 's!__INITIAL_DISK_SUFFIX__!$(img_0_sfx)!g' \
	-e 's!__OTHER_DEPS__!$(miniascape_RPM_DEPS)!g'

rpmbuild = rpmbuild \
--define "_topdir $(WORKDIR)" \
--define "_srcrpmdir $(WORKDIR)" \
--define "_sourcedir $(WORKDIR)" \
--define "_buildroot $(WORKDIR)/BUILDROOT" \
$(NULL)


$(rpmdirs)::
	mkdir -p $@

$(rpmsrcdir): $(rpmdirs)
	mkdir -p $@

$(rpmsrcdir)/$(miniascape_NAME).xml: $(miniascape_VM_XML_DIR)/$(miniascape_NAME).xml $(rpmsrcdir)
	$(vm_xml_do_subst) < $< > $@.t && mv $@.t $@

$(rpmspec): $(pkglibdatadir)/vm.spec.in $(rpmsrcdir)
	$(rpmspec_do_subst) < $< > $@.t && mv $@.t $@

$(rpmsrcdir)/README: $(rpmsrcdir)
	echo "This is a packaged KVM/Qemu vm image of $(miniascape_NAME)" > $@


# vm images:
#   1. original image -> $(WORKDIR)/$(rpmname)/<base image>
#   2.                -> $(WORKDIR)/$(rpmname)/<delta image>
#
vm_base_image_1_basename = $(miniascape_DISK_1_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))

vm_disk_images = $(rpmsrcdir)/$(miniascape_DISK_1_NAME)
vm_disk_base_images = $(rpmsrcdir)/$(vm_base_image_1_basename)

vm_images = $(vm_disk_images) $(vm_disk_base_images)


$(rpmsrcdir)/$(vm_base_image_1_basename): $(DISK_DIR)/$(miniascape_DISK_1_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_1_NAME): $(rpmsrcdir)/$(vm_base_image_1_basename)
	$(create_img)


ifneq ($(miniascape_DISK_2_NAME),)
vm_base_image_2_basename = $(miniascape_DISK_2_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))
vm_disk_images += $(rpmsrcdir)/$(miniascape_DISK_2_NAME)
vm_disk_base_images += $(rpmsrcdir)/$(vm_base_image_2_basename)

$(rpmsrcdir)/$(vm_base_image_2_basename): $(DISK_DIR)/$(miniascape_DISK_2_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_2_NAME): $(rpmsrcdir)/$(vm_base_image_2_basename)
	$(create_img)
endif
ifneq ($(miniascape_DISK_3_NAME),)
vm_base_image_3_basename = $(miniascape_DISK_3_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))
vm_disk_images += $(rpmsrcdir)/$(miniascape_DISK_3_NAME)
vm_disk_base_images += $(rpmsrcdir)/$(vm_base_image_3_basename)

$(rpmsrcdir)/$(vm_base_image_3_basename): $(DISK_DIR)/$(miniascape_DISK_3_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_3_NAME): $(rpmsrcdir)/$(vm_base_image_3_basename)
	$(create_img)
endif
ifneq ($(miniascape_DISK_4_NAME),)
vm_base_image_4_basename = $(miniascape_DISK_4_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))
vm_disk_images += $(rpmsrcdir)/$(miniascape_DISK_4_NAME)
vm_disk_base_images += $(rpmsrcdir)/$(vm_base_image_4_basename)

$(rpmsrcdir)/$(vm_base_image_4_basename): $(DISK_DIR)/$(miniascape_DISK_4_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_4_NAME): $(rpmsrcdir)/$(vm_base_image_4_basename)
	$(create_img)
endif


$(rpmsrc): $(rpmsrcdir)/$(miniascape_NAME).xml $(vm_images) $(rpmsrcdir)/README
	cd $(WORKDIR)/ && tar --xz -cvf $(rpmname).tar.xz $(rpmname)


rpm: build-rpm
srpm: build-srpm

build-rpm: $(rpmspec) $(rpmsrc)
	$(rpmbuild) --target $(miniascape_ARCH) -bb $(rpmspec)

build-srpm: $(rpmspec) $(rpmsrc)
	$(rpmbuild) -bs $(rpmspec)

.PHONY: rpm srpm build-rpm build-srpm
# vim:set ft=make ai si sm:
