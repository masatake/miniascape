#! /bin/bash
#
# fence_xvmd: init script for fence_xvmd.
#
# chkconfig: 345 80 30
# description: I/O Fencing agent host for Xen virtual machines
# processname: fence_xvmd
# config: /etc/cluster/fence_xvm.key
# pidfile: /var/run/fence_xvmd.pid
#
### BEGIN INIT INFO
# Provides: fence_xvmd
# Required-Start:
# Required-Stop:
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: I/O Fencing agent host
# Description: I/O Fencing agent host for Xen virtual machines
### END INIT INFO

SERVICE=fence_xvmd
PROCESS=fence_xvmd
DAEMON=/usr/sbin/fence_xvmd
DAEMON_OPTS="-LX"
CONFIG=/etc/sysconfig/fence_xvmd
PIDFILE=/var/run/$PROCESS.pid

# Source function library.
. /etc/init.d/functions

# Load custom configurations: $EXTRA_DAEMON_OPTS, ...
test -r $CONFIG && . $CONFIG
DAEMON_OPTS="$DAEMON_OPTS $EXTRA_DAEMON_OPTS"

test -x $DAEMON || exit 1

start() {
        echo -n $"Starting $SERVICE: "
        if test -f $PIDFILE; then
                echo $"$PROCESS is already started."
                return 0
        fi
        $DAEMON $DAEMON_OPTS
        RETVAL=$?
        if test "$RETVAL" -eq 0; then
                success $"$SERVICE startup"
                pidofproc $PROCESS > $PIDFILE
                RETVAL=$?
        else
                failure $"$SERVICE startup"
        fi
        echo
        return $RETVAL
}

stop() {
        echo -n $"Stopping $SERVICE:"
        killproc $PROCESS
	RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f $PIDFILE
        return $RETVAL
}

restart() {
	stop && start
}

RETVAL=0
case "$1" in
  start)
	start
	RETVAL=$?
	;;
  stop)
	stop
	RETVAL=$?
	;;
  restart)
	restart
	RETVAL=$?
	;;
  reload)
	echo "$0 does not support configuration reloading, you have to restart it."
	RETVAL=1
	;;
  status)
	status $PROCESS
	RETVAL=$?
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|reload|status}"
	RETVAL=1
esac

exit $RETVAL
