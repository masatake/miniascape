
  - name: &cluster_name rhel-7-cluster
    description: RHEL 7 cluser nodes

    kickstart:
      repos:
        - name: "RHEL 7 High Availability Add-On"
          baseurl: "file:///run/install/repo/addons/HighAvailability/"

    disks:
      - pool: default
        size: 6
        bus: scsi

      - pool: default
        vol: rhel-7-cluster-data-1.img
        size: 1
        bus: scsi
        shareable: true

    cluster: &cluster_def
      name: &cluster_name_0 rhel-7-cluster-0
      nodes:
        - &rhel_7_cluster_node_1 rhel-7-cluster-default-1
        - &rhel_7_cluster_node_2 rhel-7-cluster-default-2

      init:
        - pcs property set no-quorum-policy="ignore"
        - pcs resource defaults resource-stickiness="INFINITY"
        - pcs resource defaults migration-threshold="1"

      # - RHEL 7 High Availability Add-On Reference, 4.2. General Properties of
      #   Fencing Devices: http://red.ht/1dy3Mvd
      # - Delaying Fencing in a Two Node Cluster to Prevent Fence Races or "Fence
      #   Death" Scenarios: https://access.redhat.com/solutions/54829
      fences:
        - id: fence_xvm_1
          type: fence_xvm
          options:
            port: default_rhel-7-cluster-1
            pcmk_host_list: *rhel_7_cluster_node_1
            # or pcmk_host_map: "rhel-7-cluster-default-1:default_rhel-7-cluster-1"

        - id: fence_xvm_2
          type: fence_xvm
          options:
            port: default_rhel-7-cluster-2
            pcmk_host_list: *rhel_7_cluster_node_2
            delay: 5

      resources:
        - id: &rhel_7_cluster_rsc_1_name svc_ip
          type: "ocf:heartbeat:IPaddr2"
          options:
            ip: &rhel_7_cluster_rsc_1_ip 192.168.155.130
            cidr_netmask: 24
            nic: eth0
          group: ha-postgres-vips
          others: []

        - id: &rhel_7_cluster_rsc_2_name replica_master_ip
          type: "ocf:heartbeat:IPaddr2"
          options:
            ip: &rhel_7_cluster_rsc_2_ip 192.168.122.130
            cidr_netmask: 24
            nic: eth1
          group: ha-postgres-vips

        # clone-{node-,}max, notify:
        # - RHEL 7 High Availability Add-On Reference, Chapter 8. Advanced
        #   Resource types, Table 8.1. Resource Clone Options:
        #   http://red.ht/1GuDaH4
        #
        # master-{node-,}max:
        # - RHEL 7 High Availability Add-On Reference, 8.2. Multi-State
        #   Resources: Resources That Have Multiple Modes, Table 8.2.
        #   Properties of a Multi-State Resource: http://red.ht/1JEoJCK
        #
        - id: &rhel_7_cluster_rsc_3_name db_server
          type: "ocf:heartbeat:pgsql"
          master:
            options:
              # master-max: 1
              # master-node-max: 1
              # clone-max: 2 (same as the number of cluster nodes)
              # clone-node-max: 1
              notify: "true"

          options:
            rep_mode: sync
            node_list: "rhel-7-cluster-default-1 rhel-7-cluster-default-2"
            restore_command: "cp /var/lib/pgsql/pg_archive/%f %p"
            primary_conninfo_opt: "keepalives_idle=60 keepalives_interval=5 keepalives_count=5"
            master_ip: *rhel_7_cluster_rsc_2_ip
            restart_on_promote: "true"
          ops:
            - action: monitor
              options:
                timeout: 60s
                interval: 15s
                on-fail: restart

            - action: monitor
              options:
                timeout: 60s
                interval: 10s
                on-fail: restart
                role: Master

            - action: promote
              options:
                timeout: 60s
                interval: 0s
                on-fail: restart

            - action: demote
              options:
                timeout: 60s
                interval: 0s
                on-fail: stop

            - action: start
              options:
                timeout: 60s
                interval: 0s
                on-fail: restart

            - action: stop
              options:
                timeout: 60s
                interval: 0s
                on-fail: block

            - action: notify
              options:
                timeout: 60s
                interval: 0s

      # - RHEL 7 High Availability Add-On Reference, Chapter 8. Advanced
      #   Resource types, 8.2.2. Multi-state Constraints: http://red.ht/1JEoJCK
      # - RHEL 7 High Availability Add-On Reference, 6.3. Colocation of
      #   Resources, Table 6.3. Properties of a Colocation Constraint:
      #   http://red.ht/1KYhBy5
      # - RHEL 7 High Availability Add-On Reference, 6.2. Order Constraints,
      #   Table 6.2. Properties of an Order Constraint: http://red.ht/1B8gnjA
      constraints:
        - "colocation add ha-postgres-vips with master db_server-master INFINITY"
        - "order promote db_server-master then start ha-postgres-vips symmetrical=false score=INFINITY"
        - "order demote db_server-master then stop ha-postgres-vips symmetrical=false score=0"

    postgresql:
      replica:
        master: *rhel_7_cluster_rsc_2_ip
        network: 192.168.122.0/24

    generate_hosts: true
    hosts:
      - ip: *rhel_7_cluster_rsc_1_ip
        hostname: rhel-7-cluster-0

      - ip: *rhel_7_cluster_rsc_2_ip
        hostname: rhel-7-cluster-default-0

      - ip: &rhel_7_cluster_node_1_ip 192.168.122.131
        hostname: *rhel_7_cluster_node_1

      - ip: &rhel_7_cluster_node_2_ip 192.168.122.132
        hostname: *rhel_7_cluster_node_2

    virtinst:
      # FIXME: Keep DRY principle.
      #location: /var/lib/libvirt/images/rhel-server-7.1-x86_64-dvd.iso
      location: *rhel_7_location
      os_variant: rhel7
      #extra_args: console=tty0 console=ttyS0,115200 net.ifnames=0
      extra_args: "net.ifnames=0 inst.resolution=640x480"

    templates:
      autoinst:
        src: autoinstall.d/rhel-7-cluster-ks.cfg

    setup_data:
      - src: data/rhel-7-cluster/Makefile
        dst: Makefile

      - src: data/rhel-7-cluster/Makefile.custom
        dst: Makefile.custom

      # :see: http://clusterlabs.org/wiki/PgSQL_Replicated_Cluster
      # :note: Edit replica network address written into /var/lib/pgsql/data/pg_hba.conf.
      - content: |
          #! /bin/bash
          set -ex
          postgresql_conf=${0%/*}/postgresql.conf
          echo "Initialize PostgreSQL replica master ..."
          su - postgres -c "mkdir -p /var/lib/pgsql/pg_archive"
          su - postgres -c "test -f /var/lib/pgsql/PG_VERSION && rm -rf /var/lib/pgsql/data/* || :"
          # see /usr/share/doc/postgresql-*/README.rpm-dist (alt. service postgresql initdb)
          postgresql-setup initdb
          cat << 'EOF' > ${postgresql_conf}
          archive_mode = on
          archive_command = 'cp %p /var/lib/pgsql/pg_archive/%f'
          hot_standby = on
          hot_standby_feedback = on
          listen_addresses = '*'
          log_directory = 'pg_log'
          max_standby_archive_delay = -1
          max_standby_streaming_delay = -1
          replication_timeout = 5000
          restart_after_crash = off
          synchronous_commit = on
          max_wal_senders=5
          wal_keep_segments = 32
          wal_level = hot_standby
          wal_receiver_status_interval = 2
          EOF
          install -o postgres -g postgres -S .save -m 600 ${postgresql_conf} /var/lib/pgsql/data/
          grep -E '^host *replication' /var/lib/pgsql/data/pg_hba.conf || \
          (su - postgres -c "cp /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf.save" && \
             echo 'host replication all 192.168.122.0/24 trust' >> /var/lib/pgsql/data/pg_hba.conf)
          systemctl status firewalld && \
            (firewall-cmd --permanent --add-service=postgresql && \
             firewall-cmd --add-service=postgresql) || \
          (systemctl status iptables && \
           iptables -I INPUT  -p tcp -m state --state NEW -m tcp --dport 5432 -j ACCEPT || :)
        dst: init_replica_master.sh

      - content: |
          #! /bin/bash
          set -e
          psql -U postgres -c "SELECT * FROM pg_stat_replication;"
        dst: check_replica.sh

      # :see: likewise
      # :note: Edit replica master written into /var/lib/pgsql/data/recovery.conf.
      - content: |
          #! /bin/bash
          set -ex
          echo "Initialize PostgreSQL replica slave ..."
          su - postgres -c "rm -rf /var/lib/pgsql/data/* /var/lib/pgsql/pg_archive"
          su - postgres -c "pg_basebackup -h 192.168.122.131 -U postgres -D /var/lib/pgsql/data -X stream -P"
          su - postgres -c "mkdir -p /var/lib/pgsql/pg_archive"
          test -f /var/lib/pgsql/data/recovery.conf || \
          cat << 'EOF' > /var/lib/pgsql/data/recovery.conf
          standby_mode = 'on'
          primary_conninfo = 'host=192.168.122.130 port=5432 user=postgres application_name=192.168.122.132'
          restore_command = 'cp /var/lib/pgsql/pg_archive/%f %p'
          recovery_target_timeline = 'latest'
          EOF
          chmod 0600 /var/lib/pgsql/data/recovery.conf
          chown postgres.postgres /var/lib/pgsql/data/recovery.conf
          systemctl status firewalld && \
            (firewall-cmd --permanent --add-service=postgresql && \
             firewall-cmd --add-service=postgresql) || \
          (systemctl status iptables && \
           iptables -I INPUT  -p tcp -m state --state NEW -m tcp --dport 5432 -j ACCEPT || :)
        dst: init_replica_slave.sh

    # Quick and dirty workaround for rhbz#1206267
    guests:
      - hostname: &rhel_7_cluster_1_hostname rhel-7-cluster-1
        fqdn: &rhel_7_cluster_1_fqdn rhel-7-cluster-1.m2.local
        ip: &rhel_7_cluster_1_ip 192.168.155.178
        interfaces:
          - network: service
            mac: "52:54:00:05:01:78"
            ip: *rhel_7_cluster_1_ip
            host: *rhel_7_cluster_1_hostname
            fqdn: *rhel_7_cluster_1_fqdn
            activate: true
            options: "--gateway=192.168.155.254"

          - network: default  # For Inter-cluster-nodes communication
            bootproto: static
            mac: "52:54:00:02:01:78"
            ip: *rhel_7_cluster_node_1_ip
            host: rhel-7-cluster-default-1
            nodns: true
            gateway: 192.168.122.1

      - hostname: &rhel_7_cluster_2_hostname rhel-7-cluster-2
        fqdn: &rhel_7_cluster_2_fqdn rhel-7-cluster-2.m2.local
        ip: &rhel_7_cluster_2_ip 192.168.155.179
        interfaces:
          - network: service
            mac: "52:54:00:05:01:79"
            ip: *rhel_7_cluster_2_ip
            host: *rhel_7_cluster_2_hostname
            fqdn: *rhel_7_cluster_2_fqdn
            activate: true
            options: "--gateway=192.168.155.254"

          - network: default
            bootproto: static
            mac: "52:54:00:02:01:79"
            ip: *rhel_7_cluster_node_2_ip
            host: rhel-7-cluster-default-2
            nodns: true
            gateway: 192.168.122.1

# vim:sw=2:ts=2:et:
