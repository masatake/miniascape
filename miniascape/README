====================
miniascape
====================

WARNING: miniascape is in pre-alpha state and will heavily udpate day by day, so
it may not work in your environment or might cause trouble. TRY IT IN YOUR OWN
RISK, PLEASE.



miniascape is a collection of configurations and data to setup libvirt based
virtualization guests environment quickly.

Main objects are

 * Make network configuration for virtualization guests much easier.
   (pre-defined libvirt networks and DHCP configs)

 * Lightweight; Does not require expensive high-performance servers. 
   I try to make it works on my non-high power vaio note pc
   (vaio type-P: Atom Z540, 64GB SSD, 2 G RAM)

 * Do not intend to become a replacement for other feature rich software such
   like RHEV, RHN Satellite and cobbler, etc.


Files
====================


 * libvirt network definitions: /etc/miniascape/networks/\*.yaml
 * dnsmasq init scripts per libvirt network: /etc/rc.d/init.d/dnsmasq-$netname
 * fence_xvmd init scripts: /etc/rc.d/init.d/fence_xvmd
 * misc tools: /usr/libexec/miniascape/\*


Prerequisites
====================

 * make
 * virsh in libvirt
 * dnsmasq - should be installed along with libvirt



RHEL 5
-----------------------

The followings are not included in RHEL. You have to get them from EPEL repository.

 * pyattr
 * python-cheetah
 * python-elementtree
 * python-nose
 * PyYAML



Build
====================

 [autoreconf -vfi]
 ./configure


Installation
====================

 make 
 make install


Create [S]RPM
-----------------------

 make rpm | make srpm


Actions needed after post/pre installation, update and uninstallation
------------------------------------------------------------------------

If you installed from rpm, you need nothing to do.


Post installation / updates
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Go through the following steps for each libvirt networks (net-1,2,3):

  1. chkconfig --add dnsmasq-$net
  2. /usr/sbin/miniascape net register $net


Pre uninstallation
^^^^^^^^^^^^^^^^^^^^^

Go through the following steps for each libvirt networks (net-1,2,3):

  1. chkconfig --del dnsmasq-$net
  2. /usr/sbin/miniascape net unregister $net


Post uninstallation
^^^^^^^^^^^^^^^^^^^^^^^

The networks for virtualization environments (net-1, net-2 and net-3) are not
uninstalled automatically.  So, you need to uninstall by yourself if you want
to eliminate them entirely.

 1. Shutdown all of virtualization guests using these networks
 2. Shutdown and uninstall networks like the followings:

  * "for i in 1 2 3; do virsh destroy net-$i; done"
  * "for i in 1 2 3; do virsh undefine net-$i; done"


Pre/Post update
^^^^^^^^^^^^^^^^^^^^^

 * Pre: perform operations for post-uninstallation
 * Post: perform operations for post-installation



Internal
=====================


repack
--------------------

0. Setup working dir by name: ex. vm-${DOMAIN_NAME}-repacked-0.1
1. Get the guest domain XML by its name and copied into the working dir
2. Parse that domain XML and get the list of disk images
3. Copy disk images into the working dir one by one
4. Setup build files (see below)
5. Build archive [option]
6. Build src rpm [option]
7. Build binary rpm [option]


build files:

 * Makefile.am and other makefiles
 * configure.ac
 * m4 files
 * RPM SPEC file
 * README


pack
--------------------

0. Setup working dir by config file: ex. vm-${DOMAIN_NAME}-packed-0.1
1. Setup build files (see below)
5. Build archive [option]
6. Build src rpm [option]
7. Build binary rpm [option]


build files:

 * Makefile.am and other makefiles
 * configure.ac
 * m4 files
 * RPM SPEC file
 * README

Build process details:

1. Create a disk image to install guest OS. It will be used as base image.
2. Install guest OS by kickstart/preseed/etc.
3. Convert and rename disk image to ${image_name}-base.qcow2 and create delta disk image
4. Dump domain XML


TODO
=====================

miniascape itself
-----------------------

Must:

* 0.2 release (miniascape and miniascape-data-default)
  * Restructure src tree and split into tools and reference data
  * sub command 'repack', 'pack'

* Setup console access to guest domain

* Genaral tunings (timer, io scheduler, virtio, etc.) for both guest and host.

* Wrote more test codes for scripts:
  * miniascape.package
  * miniascape.virt


Optional:

* Make http service daemon configurable
* Merge ISC DHCP and bind backend as an option instead of dnsmasq
* Converter: VMDK + VMX -> QCOW2 + libvirt domain XML
* Handle rpmlint errors (see below)

::

        ssato@localhost% rpmlint miniascape-0.1.99-1.fc11.noarch.rpm
        miniascape.noarch: E: explicit-lib-dependency libvirt
        miniascape.noarch: E: explicit-lib-dependency libvirt-python
        miniascape.noarch: W: service-default-enabled /etc/rc.d/init.d/dnsmasq-net-1
        miniascape.noarch: W: service-default-enabled /etc/rc.d/init.d/dnsmasq-net-3
        miniascape.noarch: W: service-default-enabled /etc/rc.d/init.d/dnsmasq-net-2
        miniascape.noarch: W: service-default-enabled /etc/rc.d/init.d/fence_xvmd
        1 packages and 0 specfiles checked; 2 errors, 4 warnings.
        ssato@localhost%


* Handle errors in pre/post scripts:

::

        ssato@localhost% sudo rpm -Uvh miniascape-refdata-0.1.99-1.fc11.noarch.rpm
        Preparing...                ########################################### [100%]
           1:miniascape-refdata     ########################################### [100%]
        Network net-1 already exists. Redefine it by yourself later:
           ex. /usr/libexec/miniascape/virt-net-unregister net-1 && \
               /usr/libexec/miniascape/virt-net-register /var/lib/miniascape/networks/net-1.xml

        Starting dnsmasq for net-1:
        dnsmasq: failed to bind listening socket for 192.168.151.1: Address already in use
        [FAILED]
        Network net-2 already exists. Redefine it by yourself later:
           ex. /usr/libexec/miniascape/virt-net-unregister net-2 && \
               /usr/libexec/miniascape/virt-net-register /var/lib/miniascape/networks/net-2.xml

        Starting dnsmasq for net-2:
        dnsmasq: failed to bind listening socket for 192.168.152.1: Address already in use
        [FAILED]
        Network net-3 already exists. Redefine it by yourself later:
           ex. /usr/libexec/miniascape/virt-net-unregister net-3 && \
               /usr/libexec/miniascape/virt-net-register /var/lib/miniascape/networks/net-3.xml

        Starting dnsmasq for net-3:
        dnsmasq: failed to bind listening socket for 192.168.153.1: Address already in use
        [FAILED]
        ssato@localhost%



upstream works
-------------------

* --config (or --profile?) file option for virt-install [Should]
* pyvirsh - virsh alternative written in python [Should]
* enhancement for qemu-img to get base image path of delta image [Should]
* more D-Bus APIs for dnsmasq to simplify the control process of dnsmasq and make it dynamic [Should]
* dhcpv6 support for dnsmasq [Maybe]



Completed / Done
----------------------

miniascape itself
-------------------

 * Eliminate GNU extensions in Makefiles
 * Merge build (installation and packaging) scripts from vdbs
 * Make network definitions more configurable


upstream works
-------------------

* dnsmasq backend for libvirt

  * Generate hostsfile (host-ip-mac mapping file) and pass --dhcp-hostsfile
    with its path to dnsmasq started from libvirtd: my patches were merged into
    upstream. it works since libvirt 0.8.1.

  * Dump configuration to static files (and utilize --conf-file) [May]



License
====================

This is distributed under GPLv3 or later except for the Autoconf macros under
aux/m4 subdir.

See COPYING for details about GPLv3.


Special exception aux/m4/\*.m4
----------------------------------

As a special exception, I gives unlimited permission to copy, distribute and
modify the configure scripts that are the output of Autoconf when processing
the Macro. You need not follow the terms of the GNU General Public License when
using or distributing such scripts, even though portions of the text of the
Macro appear in them. The GNU General Public License (GPL) does govern all
other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to the Autoconf macro under aux/m4/
subdir only.  When you make and distribute a modified version of these Autoconf
Macro, you may extend this special exception to the GPL to apply to your
modified version as well.


Author
=======================

Satoru SATOH <satoru.satoh at gmail.com>

