#
# RPM related stuff, included from core.mk
#


# Tools
SED	= $(miniascape_SED)
VIRSH	= $(miniascape_VIRSH)
QEMU_IMG = $(miniascape_QEMU_IMG)

ARCH	= $(miniascape_ARCH)
DISK_FMT	= $(miniascape_DISK_IMG_FMT)


rpmbasename = $(miniascape_RPM_BASENAME)
rpmver	= $(miniascape_RPM_VERSION)
name	= $(miniascape_NAME)


rpmworkdir = $(WORKDIR)

rpmname = $(rpmbasename)-$(rpmver)
rpmdirs	= $(addprefix $(rpmworkdir)/,RPMS/$(arch) RPMS/noarch SRPMS SPECS BUILD BUILDROOT SOURCES)
rpmspec = $(rpmworkdir)/SPECS/$(rpmbasename).spec
rpmsrc	= $(rpmworkdir)/SOURCES/$(rpmname).tar.xz

rpmsrcdir = $(rpmworkdir)/SOURCES/$(rpmname)

rpmsrc_extras	= $(rpmsrcdir)/README

guest_xml = $(miniascape_VM_XML_DIR)/$(name).xml
guest_xml_do_subst = $(SED) -e '/uuid/d'



libvirt_imagedir = $(miniascape_DISK_TOPDIR)/$(name)
img_0_sfx	= initial


# extract ip addr:
guest_ip_addr	= $(shell $(SED) -nre 's/^([^ ]+) $(name).$(miniascape_NET_1_DOMAIN).*/\1/p' /usr/share/libvirt/networks/hosts.add)


# create delta image
create_img	= $(QEMU_IMG) create -f qcow2 -b $(notdir $<) $(notdir $@)


# variables for rpm spec:
rpmbuilddate    = $(shell LANG=C date +"%a %b %d %Y")
rpmspec_do_subst = $(SED) -e 's!__PKGNAME__!$(rpmbasename)!g' \
	-e 's!__NAME__!$(miniascape_NAME)!g' -e 's!__VER__!$(rpmver)!g' \
	-e 's!__ARCH__!$(miniascape_ARCH)!g' -e 's!__DATE__!$(rpmbuilddate)!g' \
	-e 's!__DISK_FMT__!$(DISK_FMT)!g' \
	-e 's!__INITIAL_DISK_SUFFIX__!$(img_0_sfx)!g' \
	-e 's!__OTHER_DEPS__!$(miniascape_RPM_DEPS)!g'


$(rpmdirs)::
	mkdir -p $@

$(rpmsrcdir): $(rpmdirs)
	mkdir -p $@

$(rpmsrcdir)/$(name).xml: $(guest_xml) $(rpmsrcdir)
	$(guest_xml_do_subst) < $< > $@.t && mv $@.t $@

$(rpmspec): $(pkglibdatadir)/vm.spec.in $(rpmsrcdir)
	$(rpmspec_do_subst) < $< > $@.t && mv $@.t $@

$(rpmsrcdir)/README: $(rpmsrcdir)
	echo "This is a packaged KVM/Qemu vm image of $(name)" > $@


# guest images:
#   1. original image -> $(rpmworkdir)/SOURCES/$(rpmname)/<base image>
#   2.                -> $(rpmworkdir)/SOURCES/$(rpmname)/<delta image>
#
guest_base_image_1_basename = $(miniascape_DISK_1_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))

# The following variables may be empty if corresponding DISK_?_NAME is not set
guest_base_image_2_basename = $(miniascape_DISK_2_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))
guest_base_image_3_basename = $(miniascape_DISK_3_NAME:.$(DISK_FMT)=-base.$(DISK_FMT))

null =  #

guest_disk_images = $(rpmsrcdir)/$(miniascape_DISK_1_NAME) $(rpmsrcdir)/$(miniascape_DISK_2_NAME) $(rpmsrcdir)/$(miniascape_DISK_3_NAME)
guest_disk_base_images = $(rpmsrcdir)/$(guest_base_image_1_basename) \
	$(rpmsrcdir)/$(guest_base_image_2_basename) \
	$(rpmsrcdir)/$(guest_base_image_3_basename) \
$(null) 

guest_images = $(guest_disk_images) $(guest_disk_base_images)


$(rpmsrcdir)/$(guest_base_image_1_basename): $(DISK_DIR)/$(miniascape_DISK_1_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_1_NAME): $(rpmsrcdir)/$(guest_base_image_1_basename)
	cd $(rpmsrcdir) && $(create_img)


ifneq ($(miniascape_DISK_2_NAME),)
$(rpmsrcdir)/$(guest_base_image_2_basename): $(DISK_DIR)/$(miniascape_DISK_2_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_2_NAME): $(rpmsrcdir)/$(guest_base_image_2_basename)
	cd $(rpmsrcdir) && $(create_img)
endif
ifneq ($(miniascape_DISK_3_NAME),)
$(rpmsrcdir)/$(guest_base_image_3_basename): $(DISK_DIR)/$(miniascape_DISK_3_NAME)
	cp $< $@

$(rpmsrcdir)/$(miniascape_DISK_3_NAME): $(rpmsrcdir)/$(guest_base_image_3_basename)
	cd $(rpmsrcdir) && $(create_img)
endif


$(rpmsrc): $(rpmsrcdir)/$(name).xml $(guest_images) $(rpmsrc_extras)
	cd $(rpmworkdir)/SOURCES/ && tar --xz -cvf $(rpmname).tar.xz $(rpmname)


# TODO
rpm: build-rpm
srpm: build-srpm

build-rpm: $(rpmspec) $(rpmsrc)
	rpmbuild --define "_topdir $(rpmworkdir)" \
		--define "_buildroot $(rpmworkdir)/BUILDROOT" \
		--target $(ARCH) -bb $(rpmspec)

build-srpm: $(rpmspec) $(rpmsrc)
	rpmbuild --define "_topdir $(rpmworkdir)" \
		--define "_buildroot $(rpmworkdir)/BUILDROOT" \
		-bs $(rpmspec)


.PHONY: rpm srpm build-rpm build-srpm
# vim:set ft=make ai si sm:
